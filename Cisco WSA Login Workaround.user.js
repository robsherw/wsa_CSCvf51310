// ==UserScript==
// @name         Cisco WSA Login Workaround
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  This script is a workaround for defects CSCvf51219/CSCvf51283
// @author       John Hess, Cisco Systems
// @match        https://*/*
// @match        http://*/*
// @grant        none
// @run-at       document-start
// ==/UserScript==

var NEW_SRC = "data:text/javascript;base64,"

var isCiscoAppliance = function isCiscoAppliance(){
    return (document.title.match(/Cisco (Cloud )?(Content|Email|Web) Security (Management)?/) !== null);
};

if (isCiscoAppliance()) {
    window.addEventListener('beforescriptexecute',
                            function(event)
                            {
        var originalScript = event.target;

        // debug output of full qualified script url
        console.log('script detected:', originalScript.src);

        // script ends with 'originalscript.js' ?
        // you can test as well: '<full qualified url>' === originalScript.src
        if(/\/connection-min\.js/.test(originalScript.src))
        {
            var replacementScript = document.createElement('script');
            replacementScript.src = NEW_SRC;

            originalScript.parentNode.replaceChild(replacementScript, originalScript);

            // prevent execution of the original script
            event.preventDefault();
        }
    });
}